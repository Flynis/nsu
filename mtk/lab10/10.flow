import expression;
import rational_function;

main() {
    grammar = compilePegGrammar("#include rational_arith.lingo");

    input: string = "x * y * y + x / (x + y)";

    identities: Tree<string, Expr> = setTreeValues(makeTree(), [
        Pair("x", parse("2 * y", grammar)),
    ]);

    expression = parse(input, grammar);
    if (expression != flow("PARSING FAILED")) {
        println("expression: " + expr2s(expression));
        f: RationalFunc = toRationalFunction(expression);
        println("rational function: " + rfunc2s(f));
    } else {
        println("Parsing failed");
    }

    quit(0);
}
